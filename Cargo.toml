[workspace]
resolver = "2"
members = ["crates/*"]


[workspace.package]
version = "0.4.0"
edition = "2024"
authors = ["Orual <orual@nonbinary.computer>"]
license = "AGPL-3.0"
repository = "https://github.com/orual/pattern"
homepage = "https://github.com/orual/pattern"
readme = "README.md"

[workspace.dependencies]

# Async runtime
tokio = { version = "1.40", features = ["full"] }
tokio-stream = { version = "0.1", features = ["sync"] }

# Serialization
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
toml = "0.8"

# Error handling
miette = { version = "7.2", features = ["derive"] }
thiserror = "1.0"
anyhow = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "json",
    "time",
    "local-time",
] }

# Database
surrealdb = { version = "2.3", default-features = false, features = [
    "kv-surrealkv",
    "kv-mem",
    "protocol-ws",
    "rustls",
    "jwks",
] }

# AI/LLM
# Using fork with OAuth support (system prompt array format)
#genai = { git = "https://github.com/orual/rust-genai" }
genai = { path = "../rust-genai" }
# genai = { git = "https://github.com/jeremychone/rust-genai" }

# Utilities
uuid = { version = "1.10", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
async-trait = "0.1"
futures = "0.3"
once_cell = "1.20"
parking_lot = "0.12"
dirs = "5.0"

# HTTP/Web
axum = { version = "0.7", features = ["ws"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors", "trace"] }
reqwest = { version = "0.12", default-features = false, features = [
    "http2",
    "charset",
    #"native-tls-vendored",
    "json",
    "rustls-tls",
    "gzip",
    "zstd",
    "deflate",
] }
#hyper-tls = { version = "0.6", features = ["vendored"] }

# MCP client transport dependencies
sse-stream = "0.2"
http = "1.0"


# Discord
serenity = { version = "0.12", default-features = false, features = [
    "client",
    "gateway",
    "rustls_backend",
    "model",
    "framework",
    "standard_framework",
] }

rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk.git", features = [
    "transport-io",
    "transport-sse-client",
    "transport-sse-server",
    "transport-streamable-http-client",
    "transport-streamable-http-server",
    "transport-child-process",
    "server",
    "reqwest",
    "client",
] } # MCP

# Testing
mockall = "0.13"
pretty_assertions = "1.4"

# Additional workspace-level dependencies for binary features
clap = { version = "4.5", features = ["derive"] }
tracing-appender = "0.2"
dotenvy = "0.15"
schemars = { version = "1.0", features = ["chrono04"] }
ferroid = { version = "0.5", features = [
    "snowflake",
    "async-tokio",
    "serde",
    "base32",
] }

# Authentication
jsonwebtoken = "9.3"
argon2 = "0.5"
axum-extra = { version = "0.9", default-features = false }
rand = "0.8"

cid = { version = "0.11", features = ["serde-codec"] }
multihash = { version = "0.19" }
multihash-codetable = { version = "0.1", features = ["blake3"] }
ipld-core = "0.4.2"
serde_cbor = "0.11.2"
serde_ipld_dagcbor = { version = "0.6.1", features = ["codec"] }

atrium-xrpc = "0.12.3"
atrium-api = "0.25.3"
atrium-common = "0.1.1"
atrium-identity = "0.1.3"
atrium-oauth = "0.1.1"
bsky-sdk = { version = "0.1.20", features = ["default-client"] }


[workspace.lints.clippy]
mod_module_files = "warn"
manual_range_contains = "allow"


[profile.dev.package."surrealdb"]
opt-level = 2
