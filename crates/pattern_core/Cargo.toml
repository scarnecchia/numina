[package]
name = "pattern-core"
version = "0.4.0"
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "Core agent framework and memory system for Pattern"

[dependencies]
tokio = { workspace = true }
tokio-stream = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
toml = { workspace = true }
miette = { workspace = true }
pattern-macros = { path = "../pattern_macros" }
thiserror = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
async-trait = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }
futures = { workspace = true }
parking_lot = { workspace = true }
dirs = { workspace = true }

# Database
surrealdb = { workspace = true }

# AI/LLM
genai = { workspace = true }

# HTTP client (for embeddings and HomeAssistant)
reqwest = { workspace = true }
reqwest-middleware = { version = "0.4", optional = true }
http = { version = "1.1", optional = true }

# WebSocket support for HomeAssistant
tokio-tungstenite = { version = "0.24", features = ["native-tls"] }

# Candle for local embeddings
candle-core = { version = "0.9", optional = true }
candle-nn = { version = "0.9", optional = true }
candle-transformers = { version = "0.9", optional = true }
hf-hub = { version = "0.4", default-features = false, features = [
    "rustls-tls",
    "tokio",
], optional = true }
tokenizers = { version = "0.21", optional = true }

# Schema generation
schemars = { workspace = true }
compact_str = { version = "0.9.0", features = ["serde", "markup", "smallvec"] }
smallvec = { version = "1.15.1", features = ["serde"] }
dashmap = { version = "6.1.0", features = ["serde"] }
ferroid = { workspace = true }
rand = "0.9.2"
base64 = "0.22"
sha2 = "0.10"
url = "2.5"
urlencoding = "2.1"
serde_urlencoded = "0.7"
value-ext = "0.1.2"

# DAG-CBOR and CAR archive support
serde_cbor = { workspace = true }
serde_ipld_dagcbor = { workspace = true }
iroh-car = "0.5"
ipld-core.workspace = true
cid.workspace = true
multihash.workspace = true
multihash-codetable.workspace = true

# Compression for archives
zstd = { version = "0.13", optional = true }

atrium-api.workspace = true
atrium-oauth.workspace = true
atrium-common.workspace = true
atrium-identity.workspace = true
atrium-xrpc.workspace = true
minijinja = "2.11.0"
rocketman = { version = "0.2", features = ["zstd"] }
notify = { version = "7.0", optional = true }
bsky-sdk = { workspace = true }
hickory-resolver = "0.24"

# Web tool dependencies
html2md = "0.2"
scraper = "0.22"
regex = "1.11.1"

# Calculator tool dependencies
fend-core = "1.5.7"

# Mail tool dependencies
lettre = "0.11"

# Local crates (to be added later)
# pattern-nd = { path = "../pattern-nd", optional = true }

[dev-dependencies]
tokio-test = "0.4"
mockall = "0.13"
pretty_assertions = "1.4"
tempfile = "3.0"
serial_test = "3.1"
tracing-test = "0.2"
trybuild = "1.0"
proc-macro2-diagnostics = "0.10"
miette = { workspace = true, features = ["fancy"] }

[features]
default = ["surreal-embedded", "embed-cloud", "file-watch"]
nd = []                                                                     # Enable neurodivergent features when pattern-nd is ready
export = ["zstd"]                                                           # Agent export/import with compression
oauth = ["reqwest-middleware", "http"]                                      # OAuth authentication support
file-watch = ["notify"]                                                     # File watching for data sources

# Database backends
surreal-embedded = ["surrealdb/kv-surrealkv"]
surreal-remote = ["surrealdb/protocol-ws", "surrealdb/protocol-http"]

# Embedding backends
embed-candle = [
    "candle-core",
    "candle-nn",
    "candle-transformers",
    "hf-hub",
    "tokenizers",
]
embed-cloud = ["reqwest-middleware", "http"]
embed-ollama = ["reqwest-middleware", "http"]


[lints]
workspace = true
